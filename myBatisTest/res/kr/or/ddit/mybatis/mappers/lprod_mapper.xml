<?xml version="1.0" encoding="UTF-8"?>
<!-- 이 문서는 myBatis에서 처리할 SQL문을 작성하는 문서입니다. -->
<!DOCTYPE mapper
   PUBLIC "-//mybatis.org//DTD mapper 3.0//EN"
   "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<!-- namespace속성은 이곳에 작성된 SQL문을 JAVA에서 호출해서 사용할 때
   같이 사용되는 이름이다. -->
<mapper namespace="lprod">
   <!-- 
      이 영역에는 처리할 SQL문에 맞는 태그를 사용하여 SQL문을 작성한다.
   * 사용할 수 있는 태그들...
     <select> select 문 ~~ </select>
     <insert> insert 문 ~~ </insert>
     <update> update 문 ~~ </update>
     <delete> delete 문 ~~ </delete>
       와 기타 동적 쿼리용 태그들을 사용할 수 있다.
    -->
    <!-- 
    * id속성 ==> 실행할 태그를 JAVA소스에서 호출할 때 사용되는 이름으로
             위의 <mapper>태그의 namespace속성과 연결해서 사용한다.
             (예 : "lprod.insertLprod" ==> "namespace속성값.호출할id속성값"
    * parameterType속성 ==> 작성된 SQL문에 사용될 데이터가 들어있는 객체를 기술한다.
       (보통 VO클래스, JAVA의 기본자료형이름, Map객체 등이 사용된다.)
       (VO클래스 등을 기술할 때는 해당 클래스의 전체 이름을 기술해야 한다.)
       (이 속성에는 <typeAlias>태그에서 지정한 'alias명'을 사용할 수 있다.
     -->
    <insert id="insertLprod" parameterType="kr.or.ddit.vo.LprodVO">
       insert into lprod(lprod_id, lprod_gu, lprod_nm)
       values(#{lprod_id}, #{lprod_gu}, #{lprod_nm})
    </insert>
    <insert id="insertLprod2" parameterType="lprodVo">
       insert into lprod(lprod_id, lprod_gu, lprod_nm)
       values(#{lprod_id}, #{lprod_gu}, #{lprod_nm})
    </insert>
    
    <update id="updateLprod" parameterType="lprodVo">
    	update lprod set lprod_id=#{lprod_id}, lprod_nm=#{lprod_nm}
    	where lprod_gu=#{lprod_gu} 
    </update>
     
     <!--parameterType속성에 설정되는 값이 단일 값이면 sql문에 이 값을 나타내는 변수는 특별히 이름이 정해지지 않았다
     (즉, 사용자 임의로 작성할 수 있다.)  -->
     <delete id="deleteLprod" parameterType="String"> 
    	<!--  delete from lprod where lprod_gu=#{lprod_gu}  -->
  		delete from lprod where lprod_gu= #{ssss}
    </delete>
     
     
     <!-- 
     *resultType속성==> select문을 처리한 결과를 저장할 VO클래스나 JAVA의 기본 자료형 이름,
     					Map객체를 지정할 수 있다.
     					
     					select문을 처리한 결과가 여러개의 레코드이면 JAVA소스에서 'selectList()'메서드를 
     					이용하여 호출한다. 그러면 검색된 데이터를 자동으로 List에 담아서 반환한다.
     					그래서 결과가 여러개 일 경우에도 이곳에 지정하는 것은 1개의 레코드가 저장될 클래스나 
     					자료형 이름을 지정하면 된다.     					
      -->
    <select id="getAllLprod" resultType="lprodVo"> 
     	select * from lprod
     
    </select> 	
    
    <select id="getLprod" parameterType="String" resultType="lprodVo"> 
     	select * from lprod where lprod_gu= #{lprod_gu}
     
    </select>
    
    
    
</mapper>